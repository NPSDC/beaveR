% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/solveForOptimalCut.R
\name{solveForOptimalCut}
\alias{solveForOptimalCut}
\title{Finds a cut and its optimal value on solving the objective function that
minimizes(maximizes) the sum for that metric over all nodes in the cut}
\usage{
solveForOptimalCut(tse, metVec, type = "min")
}
\arguments{
\item{tse}{TreeSumarizedExperiment obtained as the output of running
\code{buildTSE}}

\item{metVec}{numeric vector representing a metric for all nodes in the tree}

\item{type}{either 'min' or 'max', to minimize or maximize the sum of
the metric in the objective function}
}
\value{
List containing the nodes in the cut and the corresponding optimal
value
}
\description{
Finds a cut and its optimal value on solving the objective function that
minimizes(maximizes) the sum for that metric over all nodes in the cut
}
\examples{
example(buildTSE)
gamma <- 0.1
tree <- TreeSummarizedExperiment::rowTree(tse)
descSize <- sapply(phangorn::Descendants(tree, seq(nrow(tse))), length)
metric <- (mcols(tse)[['meanInfRV']] + ape::node.depth(tree, 2)*gamma) *descSize
objS <- solveForOptimalCut(tse, metVec = metric, type = 'min')
print(objS[['optVal']])
print(length(objS[['cut']]))

}
